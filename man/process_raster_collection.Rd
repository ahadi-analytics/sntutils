% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/process_rasters.R
\name{process_raster_collection}
\alias{process_raster_collection}
\title{Process multiple raster files from a directory}
\usage{
process_raster_collection(
  directory,
  shapefile,
  id_cols = c("adm0", "adm1", "adm2"),
  pattern = "\\\\.tif$",
  aggregations = c("mean"),
  layer_to_process = 1,
  raster_is_density = FALSE
)
}
\arguments{
\item{directory}{Directory containing raster files to process}

\item{shapefile}{sf/SpatVector object with administrative boundaries. Must be
in the same coordinate reference system (CRS) as the raster data}

\item{id_cols}{Vector of column names from shapefile to include in output.
Default is c("adm0", "adm1", "adm2") for country and first admin level}

\item{pattern}{Regular expression pattern to match raster files. Default is
"\\.tif$" to match all .tif files}

\item{aggregations}{Vector of aggregation methods to calculate. Supported
values are "mean", "sum", and "median". Default is c("mean")}

\item{layer_to_process}{Integer or character. Specifies which layer in a
multi-layer raster to extract. If the raster contains multiple layers
(e.g., different years or indicators), this argument selects the layer to
be processed. Default is 1.}

\item{raster_is_density}{Logical indicating if raster values represent density.
If TRUE, values are converted from density to counts using cell area.
Default is FALSE.}
}
\value{
A combined data frame containing results from all processed files,
sorted by time unit if available. Has the same structure as output from
process_raster_with_boundaries() but with multiple files combined.
}
\description{
This function processes multiple raster files in a directory by applying
process_raster_with_boundaries() to each file and combining the results.
Includes progress tracking and error handling.
}
\details{
The function:
\enumerate{
\item Lists all files in directory matching the pattern
\item Creates a progress bar for tracking
\item Processes each file using process_raster_with_boundaries()
\item Combines results into a single data frame
\item Sorts by time unit if available
}
}
\examples{
\dontrun{
# Process all CHIRPS files in a directory
districts <- sf::st_read("districts.shp")
results <- process_raster_collection(
  directory = "chirps_data",
  shapefile = districts,
  id_cols = c("COUNTRY", "DISTRICT"),
  pattern = "chirps.*\\\\.tif$",
  aggregations = c("mean", "sum")
)
}
}
