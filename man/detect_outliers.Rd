% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/outlier_detection.R
\name{detect_outliers}
\alias{detect_outliers}
\title{Detect outliers with guardrails and consensus}
\usage{
detect_outliers(
  data,
  column,
  record_id = "record_id",
  admin_level = c("adm1", "adm2"),
  spatial_level = NULL,
  date = "date",
  time_mode = c("across_time", "within_year"),
  value_type = c("count", "rate"),
  strictness = c("balanced", "lenient", "strict", "advanced"),
  methods = c("iqr", "median", "mean", "consensus"),
  sd_multiplier = 3,
  mad_constant = 1.4826,
  mad_multiplier = 9,
  iqr_multiplier = 2,
  consensus_rule = 2,
  output_profile = c("standard", "lean", "audit"),
  min_n = 8,
  reporting_rate_col = NULL,
  reporting_rate_min = 0.5,
  key_indicators_hf = NULL,
  trailing_tolerance = FALSE,
  classify_outbreaks = TRUE,
  outbreak_min_run = 2,
  outbreak_prop_tolerance = 0.5,
  outbreak_max_gap = 1,
  verbose = TRUE
)
}
\arguments{
\item{data}{Data frame containing the indicator to analyse.}

\item{column}{Name of the numeric column to evaluate.}

\item{record_id}{Unique record identifier column.}

\item{admin_level}{Character vector of administrative level columns for
parallel grouping, ordered from higher to lower resolution.
Defaults to \code{c("adm1", "adm2")}.}

\item{spatial_level}{Character string specifying the finest spatial unit
for analysis (e.g., "hf_uid" for facility-level). When specified,
\code{admin_levels} defines grouping boundaries while \code{spatial_level} defines
the unit of analysis. This prevents excessive grouping while maintaining
spatial granularity. Default is \code{NULL} (uses most granular admin level).}

\item{date}{Date column (Date, POSIXt, or parseable character string).
Year, month, and yearmon are automatically derived from this column.}

\item{time_mode}{Pooling strategy: \code{"across_time"} or \code{"within_year"}.}

\item{value_type}{Indicator type: \code{"count"} or \code{"rate"}. Counts floor lower
bounds at 0.}

\item{strictness}{Strictness preset: \code{"lenient"}, \code{"balanced"}, \code{"strict"},
or \code{"advanced"}. Presets map to method multipliers. If not \code{"advanced"},
any manual multipliers are \strong{ignored}.}

\item{methods}{Character vector specifying which outlier detection
methods to use: "iqr" (Interquartile Range), "median" (Median Absolute
Deviation), "mean" (Mean +/- SD), and/or "consensus".
Default is \code{c("iqr", "median", "mean", "consensus")}.
For consensus, at least two other methods must be selected.}

\item{sd_multiplier}{Width (in SD units) for the mean method
(used only when \code{strictness = "advanced"}).}

\item{mad_constant}{Constant passed to \code{stats::mad()} in advanced mode
(default 1.4826).}

\item{mad_multiplier}{Width multiplier for the MAD method (advanced mode).}

\item{iqr_multiplier}{Tukey fence multiplier for the IQR method
(advanced mode).}

\item{consensus_rule}{Number of methods that must agree (\code{1}, \code{2}, or \code{3})
for the consensus flag to call an outlier. Default \code{2}.}

\item{output_profile}{Controls the amount of detail returned:
\code{"lean"} (minimal columns: id, admin, date, value, consensus flag, reason),
\code{"standard"} (lean + per-method flags + bounds + seasonality mode),
\code{"audit"} (all columns for full reproducibility). Default \code{"standard"}.}

\item{min_n}{Minimum observations required in the active comparison bucket
before flagging is attempted (applies to any seasonal bucket or fallback).}

\item{reporting_rate_col}{Optional column with reporting completeness in
\verb{[0, 1]}.}

\item{reporting_rate_min}{Minimum acceptable reporting rate. Rows below the
threshold receive \code{reason = "low_reporting"} and are not flagged.}

\item{key_indicators_hf}{Optional character vector of indicator names used to
determine facility activeness. If supplied, the function calls
\code{classify_facility_activity()} internally to exclude inactive health
facilities from outlier detection. Inactive facility-months are tagged with
\code{reason = "inactive_facility"} and excluded from detection. If \code{NULL}
(default), activeness filtering is skipped. Typical indicators include
\code{"allout"}, \code{"test"}, or \code{"conf"}. This adjustment prevents false positives
caused by facilities that start or stop reporting mid-period.}

\item{trailing_tolerance}{Logical. If TRUE, Method 3 keeps a facility
active during months where it fails to report if those months occur at
the end of the time series. Defaults to FALSE.}

\item{classify_outbreaks}{Logical. When \code{TRUE} (default), applies outbreak
classification to distinguish between isolated outliers and sustained
outbreak patterns. Consecutive outliers meeting the outbreak criteria are
reclassified from "outlier" to "outbreak". This is particularly useful
for epidemiological surveillance to identify disease outbreak patterns.
Set to \code{FALSE} to disable outbreak classification.}

\item{outbreak_min_run}{Integer. Minimum number of consecutive outliers
required to classify as an outbreak (default \code{2}). Must be >= 2.}

\item{outbreak_prop_tolerance}{Numeric. Proportional tolerance for outbreak
consistency (default \code{0.9}). Values within this tolerance of the run
median are considered consistent. Range: (0, 1).}

\item{outbreak_max_gap}{Integer. Maximum allowed gap (non-outlier months)
between outliers that can still be considered part of the same outbreak
(default \code{1}). For example, with \code{outbreak_max_gap = 1}, the pattern
"outlier-normal-outlier-outlier" would be classified as one outbreak
of length 3, rather than separate incidents. Set to \code{0} for strict
consecutive-only outbreaks. Useful for real-world data with reporting gaps.}

\item{verbose}{Logical. When \code{TRUE}, prints an informative summary showing
which methods are being applied, the pooling strategy, strictness settings,
guardrails, and consensus rule. Default is \code{FALSE}.}
}
\value{
Tibble with outlier classifications and metadata. Columns include:
identifiers (\code{record_id}, admin levels, \code{yearmon}, \code{year}, derived
\code{month}), \code{column_name}, \code{value}, \code{value_type}, scale stats (\code{mean},
\code{sd}, \code{median}, \code{mad}, \code{q1}, \code{q3}, \code{iqr}), method bounds, \code{n_in_group},
guardrail \code{reason}, method flags (optional), \code{outlier_flag_consensus},
strictness multipliers, and (if activeness filtering was applied)
\code{activeness_applied} and \code{key_indicators_used}.

\strong{Outlier flag categories are simplified to three intuitive groups:}
\itemize{
\item \code{"normal"}: Values within expected statistical bounds
\item \code{"outlier"}: Values exceeding thresholds (potential anomalies/outbreaks)
\item \code{"insufficient_data"}: Various data quality issues preventing
determination (consolidates insufficient_n, insufficient_evidence,
unstable_scale, etc.)
}
}
\description{
\code{detect_outliers()} evaluates a numeric indicator by administrative unit and
time using three methods (mean + SD, median + MAD, Tukey upper fence) to
identify unusually HIGH values only (potential outbreaks or data anomalies).
Low values are NOT flagged as outliers. It enforces reporting and sample-size
guardrails, supports strictness presets. Optional outbreak classification
distinguishes between isolated outliers and sustained outbreak patterns using
gap-aware clustering that can bridge short interruptions in the outbreak
signal. It returns per-method flags (optional), a consensus classification,
scale statistics, and metadata.
}
\details{
\strong{Workflow}
\enumerate{
\item Validation & prep: confirm required columns, coerce target to numeric
safely, derive month from \code{yearmon}.
\item Activeness filtering (if \code{key_indicators_hf} is supplied): call
\code{classify_facility_activity()} to tag inactive facilities. Inactive
facility-months are excluded from detection and assigned
\code{reason = "inactive_facility"}.
\item Strictness: presets map to (SD, MAD, IQR) multipliers; advanced mode
honours manual multipliers. On across-time fallback the strictness shifts
one step toward lenient.
\item Guardrails: rows failing \code{reporting_rate_min} or \code{min_n} bypass flagging
and record \code{reason} (\code{low_reporting}, \code{insufficient_n},
\code{insufficient_data}).
\item Flagging: each method checks if values exceed the UPPER threshold only
(e.g., mean + multiplier x SD). Low values are never flagged. Methods
are suppressed when scales are unstable (\code{sd}, \code{mad}, or \code{iqr}
equals zero).
\item Consensus: final \code{outlier_flag_consensus} requires at least
\code{consensus_rule} methods to agree over available (non-suppressed) methods.
}

\strong{Facility activeness adjustment}

When inactive or newly activated health facilities are included in aggregated
totals, apparent spikes or dips can occur that do not represent real
epidemiological changes. For example, if ten new facilities start reporting
in Matoto in mid-2022, the total number of confirmed cases rises even if
incidence per facility remains constant. To prevent such artefacts,
\code{detect_outliers()} can optionally apply activeness filtering using
\code{classify_facility_activity()}. Only active facilities (those that reported
at least one of the specified key indicators in a given month) contribute to
the comparison pool for outlier detection. This step improves
interpretability of results and reduces false positives in areas with
variable reporting completeness or frequent facility additions.

\strong{Presets} (for high outliers only)
\itemize{
\item lenient: values > mean + 4.0 x SD, median + 12 x MAD,
or Q3 + 3.0 x IQR
\item balanced: values > mean + 3.0 x SD, median + 9 x MAD,
or Q3 + 2.0 x IQR
\item strict: values > mean + 2.5 x SD, median + 6 x MAD,
or Q3 + 1.5 x IQR
\item advanced: use user-supplied multipliers
}

Note: Only values ABOVE the upper thresholds are flagged. Low values are
always classified as "normal" regardless of how far below the mean/median.

The returned tibble always contains identifiers, scale statistics, bounds,
strictness metadata, and the guardrail reason. When \code{output_profile = "standard"} or \code{"audit"}, method-specific flags are included alongside
the consensus.
}
\examples{
\dontrun{
# NOTE: Only HIGH values are flagged as outliers (e.g., disease outbreaks).
# Low values are always considered "normal".

# 1) Minimal consensus output at adm1-only level
detect_outliers(
  data = malaria_data,
  column = "confirmed_cases",
  date = "date",
  record_id = "facility_id",
  admin_levels = c("adm1"),        # ignore adm2 if not present
  time_mode = "across_time"
)

# 2) Within-year comparison
detect_outliers(
  data = malaria_data,
  column = "confirmed_cases",
  date = "date",
  admin_levels = c("adm1"),
  time_mode = "within_year",
  consensus_rule = 2,
  output_profile = "audit"
)

# 3) Advanced overrides for rates
detect_outliers(
  data = malaria_data,
  column = "positivity_rate",
  date = "date",
  value_type = "rate",
  strictness = "advanced",
  sd_multiplier = 2.5,
  mad_multiplier = 7,
  iqr_multiplier = 1.8,
  min_n = 10,
  output_profile = "audit"
)

# 4) With facility activeness filtering
detect_outliers(
  data = malaria_data,
  column = "conf",
  date = "date",
  admin_levels = c("adm1", "adm2"),
  time_mode = "across_time",
  key_indicators_hf = c("allout", "test", "conf")
)

# 5) With binary activeness classification
detect_outliers(
  data = malaria_data,
  column = "conf",
  date = "date",
  admin_levels = c("adm1", "adm2"),
  time_mode = "across_time",
  key_indicators_hf = c("allout", "test", "conf")
)
}
}
